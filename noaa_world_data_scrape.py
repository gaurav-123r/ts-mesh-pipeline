# -*- coding: utf-8 -*-
"""noaa_world_data_scrape.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uAYmv18kpUsOm-STzhB3BWzRxEMpVpAR
"""

import requests
import csv
import matplotlib.pyplot as plt

class NoaaWorldDatascraper:
    def __init__(self, location_id, start_date, end_date, token):
        self.api_url = f"https://www.ncdc.noaa.gov/cdo-web/api/v2/data?datasetid=GSOM&locationid={location_id}&startdate={start_date}&enddate={end_date}&datatypeid=TMAX&limit=1000"
        self.headers = {"token": token}

    def fetch_data(self):
        response = requests.get(self.api_url, headers=self.headers)
        if response.status_code == 200:
            return response.json()
        else:
            print(f"Request failed with status code: {response.status_code}")
            print(f"Response content: {response.text}")
            raise Exception("Failed to fetch data")


    def process_data(self, data):
        processed_data = []
        for record in data["results"]:
            date = record["date"]
            value = record["value"]
            processed_data.append({"date": date, "temperature": value})
        return processed_data

    def save_to_csv(self, data, filename):
        results = data.get("results", [])  #"results" key from the data dictionary
        if not results:
            print("No data to save.")
            return

        fieldnames = results[0].keys() if results else []

        with open(filename, 'w', newline='') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
            writer.writeheader()
            writer.writerows(results)

    def plot_data(self, data):
        dates = [entry["date"] for entry in data]
        temperatures = [float(entry["temperature"]) / 10 for entry in data]  # Convert to Celsius
        plt.bar(dates, temperatures)
        plt.xlabel("Date")
        plt.ylabel("Temperature (°C)")
        plt.title("Temperature Trend")
        plt.xticks(rotation=45)
        plt.tight_layout()
        plt.show()


    def plot_temperature_trends(self, data):
        dates = [entry['date'] for entry in data['results']]
        temperatures = [entry['value'] / 10 for entry in data['results']]  # Convert temperature value to Celsius

        plt.figure(figsize=(10, 6))
        plt.plot(dates, temperatures, marker='o', linestyle='-', color='b')
        plt.xlabel('Date')
        plt.ylabel('Temperature (°C)')
        plt.title('Temperature Trends')
        plt.xticks(rotation=45)
        plt.tight_layout()
        plt.show()

if __name__ == "__main__":
    location_id = "CITY:US390029"
    start_date = "2021-01-01"
    end_date = "2023-06-30"
    api_token = "GsYqyNbVeGDBmZpyPbxzpyWUIgBucXhE"

    scraper = NoaaWorldDatascraper(location_id, start_date, end_date, api_token)
    raw_data = scraper.fetch_data()
    scraper.save_to_csv(raw_data, "temperature_data.csv")
    scraper.plot_temperature_trends(raw_data)

from google.colab import files
files.download('temperature_data.csv')











